"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import sys

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions
from builtins import (
    bool,
    int,
    str,
    type,
)
from google.protobuf.descriptor import (
    Descriptor,
    EnumDescriptor,
    FileDescriptor,
)
from google.protobuf.internal.enum_type_wrapper import (
    EnumTypeWrapper,
)
from google.protobuf.message import (
    Message,
)
from typing import (
    Literal,
    NewType,
    final,
)

DESCRIPTOR: FileDescriptor


HealthCheckRequest: HealthCheckRequest

class HealthCheckRequest(Message):
    DESCRIPTOR: Descriptor

    SERVICE_FIELD_NUMBER: int
    service: str
    def __init__(
        self,
        *,
        service: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["_service", b"_service", "service", b"service"]) -> bool: ...
    def ClearField(self, field_name: Literal["_service", b"_service", "service", b"service"]) -> None: ...
    def WhichOneof(self, oneof_group: Literal["_service", b"_service"]) -> Literal["service"] | None: ...


HealthCheckResponse: HealthCheckResponse

class HealthCheckResponse(Message):
    DESCRIPTOR: Descriptor

    class _ServingStatus:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _ServingStatusEnumTypeWrapper(EnumTypeWrapper[HealthCheckResponse._ServingStatus.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        UNKNOWN: HealthCheckResponse._ServingStatus.ValueType  # 0
        SERVING: HealthCheckResponse._ServingStatus.ValueType  # 1
        NOT_SERVING: HealthCheckResponse._ServingStatus.ValueType  # 2
        SERVICE_UNKNOWN: HealthCheckResponse._ServingStatus.ValueType  # 3

    class ServingStatus(_ServingStatus, metaclass=_ServingStatusEnumTypeWrapper): ...
    UNKNOWN: HealthCheckResponse.ServingStatus.ValueType  # 0
    SERVING: HealthCheckResponse.ServingStatus.ValueType  # 1
    NOT_SERVING: HealthCheckResponse.ServingStatus.ValueType  # 2
    SERVICE_UNKNOWN: HealthCheckResponse.ServingStatus.ValueType  # 3

    STATUS_FIELD_NUMBER: int
    status: HealthCheckResponse.ServingStatus.ValueType
    def __init__(
        self,
        *,
        status: HealthCheckResponse.ServingStatus.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["_status", b"_status", "status", b"status"]) -> bool: ...
    def ClearField(self, field_name: Literal["_status", b"_status", "status", b"status"]) -> None: ...
    def WhichOneof(self, oneof_group: Literal["_status", b"_status"]) -> Literal["status"] | None: ...