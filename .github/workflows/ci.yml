name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  java-build:
    name: Java Gradle build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Gradle build (all modules)
        run: ./gradlew build --no-daemon

  frontend-build:
    name: Frontend build (${{ matrix.app }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app: [ 'niffler-ng-client', 'niffler-ng-gql-client' ]
    defaults:
      run:
        working-directory: ${{ matrix.app }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.app }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

  python-tests:
    name: Python tests (Playwright)
    runs-on: ubuntu-latest
    needs: [ java-build ]
    env:
      RUN_DOCKER_SERVICES: 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install pip tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel

      - name: Install project (python_test)
        run: |
          python -m pip install ./python_test

      - name: Install Playwright browsers
        run: |
          python -m playwright install --with-deps

      - name: Optionally run docker-compose services
        if: env.RUN_DOCKER_SERVICES == 'true'
        run: |
          docker compose -f docker-compose.ci.yml up -d

      - name: Run pytest
        run: |
          pytest python_test/ 

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: python_test/allure-results
          if-no-files-found: warn


